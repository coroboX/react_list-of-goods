{"version":3,"sources":["components/GoodItem.js","components/Select.js","components/GoodsList.js","App.js","index.js"],"names":["GoodItem","props","good","Select","optionsNumbers","onSelect","setValue","options","map","elem","key","value","onChange","event","target","GoodsList","state","currentGoods","initialGoods","selectValue","handleReverseButton","setState","prevState","reverse","handleSortButton","sort","a","b","localeCompare","handleResetButton","handleSortLButton","length","handleSelectChanged","val","filter","item","type","onClick","this","React","Component","goodsFromServer","App","isStarted","handleStartButton","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAW,SAACC,GAAW,IAC1BC,EAASD,EAATC,KAER,OACE,4BACGA,ICLMC,EAAS,SAACF,GAAW,IACxBG,EAAuCH,EAAvCG,eAAgBC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAC5BC,EAAUH,EAAeI,KAAI,SAAAC,GAAI,OACrC,4BACEC,IAAKD,EACLE,MAAOF,GAENA,MAIL,OACE,4BACEE,MAAOL,EACPM,SAAU,SAAAC,GAAK,OAAIR,EAASQ,EAAMC,OAAOH,SAExCJ,ICdMQ,EAAb,4MACEC,MAAQ,CACNC,aAAc,EAAKhB,MAAMiB,aACzBC,YAAa,GAHjB,EAMEZ,QAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IANxC,EAQEa,oBAAsB,kBACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAc,YAAIK,EAAUL,cACzBM,eAXT,EAeEC,iBAAmB,kBACjB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAc,YAAIK,EAAUL,cACzBQ,MAAK,SAACC,EAAGC,GAAJ,OACJD,EAAEE,cAAcD,WAnB1B,EAwBEE,kBAAoB,kBAClB,EAAKR,SAAS,CACZJ,aAAc,EAAKhB,MAAMiB,aACzBC,YAAa,KA3BnB,EA+BEW,kBAAoB,kBAClB,EAAKT,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAc,YAAIK,EAAUL,cACzBQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEK,OAASJ,EAAEI,eAlCtC,EAsCEC,oBAAsB,SAAAC,GAAG,OACvB,EAAKZ,SAAS,CACZJ,aAAc,EAAKhB,MAAMiB,aACtBgB,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,QAAUE,KACjCd,YAAac,KA1CnB,uDA+CI,OACE,oCACE,4BACEG,KAAK,SACLC,QAASC,KAAKT,mBAFhB,SAMA,6BACA,4BACEO,KAAK,SACLC,QAASC,KAAKlB,qBAFhB,WAMA,6BACA,4BACEgB,KAAK,SACLC,QAASC,KAAKd,kBAFhB,uBAMA,6BACA,4BACEY,KAAK,SACLC,QAASC,KAAKR,mBAFhB,kBAMA,6BACA,kBAAC,EAAD,CACE1B,eAAgBkC,KAAK/B,QACrBD,SAAUgC,KAAKtB,MAAMG,YACrBd,SAAUiC,KAAKN,sBAEjB,6BACA,4BACGM,KAAKtB,MAAMC,aAAaT,KAAI,SAAAN,GAAI,OAC/B,kBAAC,EAAD,CACEQ,IAAKR,EACLA,KAAMA,aAvFpB,GAA+BqC,IAAMC,WCD/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwCaC,E,4MApCb1B,MAAQ,CACNE,aAAcuB,EACdE,WAAW,G,EAGbC,kBAAoB,WAClB,EAAKvB,SAAS,CACZsB,WAAW,K,uDAIL,IAAD,EAC6BL,KAAKtB,MAAjCE,EADD,EACCA,aAAcyB,EADf,EACeA,UAEtB,OACE,yBAAKE,UAAU,OACVF,EASC,kBAAC,EAAD,CACEzB,aAAcA,IARhB,4BACEkB,KAAK,SACLC,QAASC,KAAKM,mBAFhB,SAYH1B,EAAaa,Y,GA/BJQ,IAAMC,WCbxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3b37d52c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodItem = (props) => {\n  const { good } = props;\n\n  return (\n    <li>\n      {good}\n    </li>\n  );\n};\n\nGoodItem.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = (props) => {\n  const { optionsNumbers, onSelect, setValue } = props;\n  const options = optionsNumbers.map(elem => (\n    <option\n      key={elem}\n      value={elem}\n    >\n      {elem}\n    </option>\n  ));\n\n  return (\n    <select\n      value={setValue}\n      onChange={event => onSelect(event.target.value)}\n    >\n      {options}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  optionsNumbers: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  setValue: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodItem } from './GoodItem';\nimport { Select } from './Select';\n\nexport class GoodsList extends React.Component {\n  state = {\n    currentGoods: this.props.initialGoods,\n    selectValue: 1,\n  };\n\n  options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  handleReverseButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .reverse(),\n    }))\n  );\n\n  handleSortButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .sort((a, b) => (\n          a.localeCompare(b)\n        )),\n    }))\n  );\n\n  handleResetButton = () => (\n    this.setState({\n      currentGoods: this.props.initialGoods,\n      selectValue: 1,\n    })\n  );\n\n  handleSortLButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .sort((a, b) => (a.length - b.length)),\n    }))\n  );\n\n  handleSelectChanged = val => (\n    this.setState({\n      currentGoods: this.props.initialGoods\n        .filter(item => item.length >= val),\n      selectValue: val,\n    })\n  )\n\n  render() {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.handleResetButton}\n        >\n          Reset\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleReverseButton}\n        >\n          Reverse\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleSortButton}\n        >\n          Sort alphabetically\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleSortLButton}\n        >\n          Sort by length\n        </button>\n        <br />\n        <Select\n          optionsNumbers={this.options}\n          setValue={this.state.selectValue}\n          onSelect={this.handleSelectChanged}\n        />\n        <br />\n        <ul>\n          {this.state.currentGoods.map(good => (\n            <GoodItem\n              key={good}\n              good={good}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  initialGoods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    initialGoods: goodsFromServer,\n    isStarted: false,\n  };\n\n  handleStartButton = () => {\n    this.setState({\n      isStarted: true,\n    });\n  }\n\n  render() {\n    const { initialGoods, isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        { !isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.handleStartButton}\n            >\n              Start\n            </button>\n          ) : (\n            <GoodsList\n              initialGoods={initialGoods}\n            />\n          )\n        }\n        {initialGoods.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}