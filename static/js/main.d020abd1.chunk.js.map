{"version":3,"sources":["components/GoodItem.js","components/Select.js","components/GoodsList.js","App.js","index.js"],"names":["GoodItem","props","good","Select","this","optionsNumbers","onSelect","setValue","options","map","elem","key","value","onChange","React","PureComponent","GoodsList","state","resetGoods","initialGoods","currentGoods","selectValue","handleReverseButton","setState","prevState","reverse","handleSortButton","sort","a","b","localeCompare","handleResetButton","handleSortLButton","length","handleSelectChanged","filter","item","type","onClick","Component","goodsFromServer","App","isStarted","handleStartButton","startDisplay","className","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAW,SAACC,GAAW,IAC1BC,EAASD,EAATC,KAER,OACE,4BACGA,ICLMC,EAAb,uKACY,IAAD,EACwCC,KAAKH,MAA5CI,EADD,EACCA,eAAgBC,EADjB,EACiBA,SAAUC,EAD3B,EAC2BA,SAC5BC,EAAUH,EAAeI,KAAI,SAAAC,GAAI,OACrC,4BACEC,IAAKD,EACLE,MAAOF,GAENA,MAIL,OACE,4BACEE,MAAOL,EACPM,SAAUP,GAETE,OAjBT,GAA4BM,IAAMC,eCErBC,EAAb,4MACEC,MAAQ,CACNC,WAAW,YAAK,EAAKjB,MAAMkB,cAC3BC,aAAc,EAAKnB,MAAMkB,aACzBE,YAAa,GAJjB,EAOEb,QAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAPxC,EASEc,oBAAsB,kBACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAc,YAAII,EAAUJ,cACzBK,eAZT,EAgBEC,iBAAmB,kBACjB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAc,YAAII,EAAUJ,cACzBO,MAAK,SAACC,EAAGC,GAAJ,OACJD,EAAEE,cAAcD,WApB1B,EAyBEE,kBAAoB,kBAClB,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAa,YAAKI,EAAUN,iBA3BlC,EA+BEc,kBAAoB,kBAClB,EAAKT,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAc,YAAII,EAAUJ,cACzBO,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEK,OAASJ,EAAEI,eAlCtC,EAsCEC,oBAAsB,kBACpB,EAAKX,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAc,YAAII,EAAUJ,cACzBe,QAAO,SAAAC,GAAI,OAAIA,EAAKH,OAAS,UAzCtC,uDA8CI,OACE,oCACE,4BACEI,KAAK,SACLC,QAASlC,KAAKkB,qBAFhB,WAMA,6BACA,4BACEe,KAAK,SACLC,QAASlC,KAAKsB,kBAFhB,QAMA,6BACA,4BACEW,KAAK,SACLC,QAASlC,KAAK2B,mBAFhB,SAMA,6BACA,4BACEM,KAAK,SACLC,QAASlC,KAAK4B,mBAFhB,eAMA,6BACA,kBAAC,EAAD,CACE3B,eAAgBD,KAAKI,QACrBD,SAAUH,KAAKa,MAAMI,YACrBf,SAAUF,KAAK8B,sBAEjB,6BACA,4BACG9B,KAAKa,MAAMG,aAAaX,KAAI,SAAAP,GAAI,OAC/B,kBAAC,EAAD,CACES,IAAKT,EACLA,KAAMA,aAtFpB,GAA+BY,IAAMyB,WCD/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmDaC,E,4MA/CbxB,MAAQ,CACNE,aAAcqB,EACdE,WAAW,G,EAGbC,kBAAoB,WAClB,EAAKpB,SAAS,CACZmB,WAAW,K,EAIfE,aAAe,SAACF,EAAWvB,GACzB,OAAKuB,EAYH,kBAAC,EAAD,CACEvB,aAAcA,IAXd,4BACEkB,KAAK,SACLC,QAAS,EAAKK,mBAFhB,U,uDAgBI,IAAD,EAC6BvC,KAAKa,MAAjCE,EADD,EACCA,aAAcuB,EADf,EACeA,UAEtB,OACE,yBAAKG,UAAU,OAEXzC,KAAKwC,aACHF,EACAvB,GAGHA,EAAac,Y,GA1CJnB,IAAMyB,WCbxBO,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d020abd1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodItem = (props) => {\n  const { good } = props;\n\n  return (\n    <li>\n      {good}\n    </li>\n  );\n};\n\nGoodItem.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Select extends React.PureComponent {\n  render() {\n    const { optionsNumbers, onSelect, setValue } = this.props;\n    const options = optionsNumbers.map(elem => (\n      <option\n        key={elem}\n        value={elem}\n      >\n        {elem}\n      </option>\n    ));\n\n    return (\n      <select\n        value={setValue}\n        onChange={onSelect}\n      >\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  optionsNumbers: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  setValue: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodItem } from './GoodItem';\nimport { Select } from './Select';\n\nexport class GoodsList extends React.Component {\n  state = {\n    resetGoods: [...this.props.initialGoods],\n    currentGoods: this.props.initialGoods,\n    selectValue: 1,\n  };\n\n  options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  handleReverseButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .reverse(),\n    }))\n  );\n\n  handleSortButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .sort((a, b) => (\n          a.localeCompare(b)\n        )),\n    }))\n  );\n\n  handleResetButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.resetGoods],\n    }))\n  );\n\n  handleSortLButton = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .sort((a, b) => (a.length - b.length)),\n    }))\n  );\n\n  handleSelectChanged = () => (\n    this.setState(prevState => ({\n      currentGoods: [...prevState.currentGoods]\n        .filter(item => item.length > 5),\n    }))\n  )\n\n  render() {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.handleReverseButton}\n        >\n          Reverse\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleSortButton}\n        >\n          Sort\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleResetButton}\n        >\n          Reset\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={this.handleSortLButton}\n        >\n          Sort length\n        </button>\n        <br />\n        <Select\n          optionsNumbers={this.options}\n          setValue={this.state.selectValue}\n          onSelect={this.handleSelectChanged}\n        />\n        <br />\n        <ul>\n          {this.state.currentGoods.map(good => (\n            <GoodItem\n              key={good}\n              good={good}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  initialGoods: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    initialGoods: goodsFromServer,\n    isStarted: false,\n  };\n\n  handleStartButton = () => {\n    this.setState({\n      isStarted: true,\n    });\n  }\n\n  startDisplay = (isStarted, initialGoods) => {\n    if (!isStarted) {\n      return (\n        <button\n          type=\"button\"\n          onClick={this.handleStartButton}\n        >\n          Start\n        </button>\n      );\n    }\n\n    return (\n      <GoodsList\n        initialGoods={initialGoods}\n      />\n    );\n  }\n\n  render() {\n    const { initialGoods, isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          this.startDisplay(\n            isStarted,\n            initialGoods,\n          )\n        }\n        {initialGoods.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}